name: scrape-and-index

on:
  schedule:
    - cron: "23 5 7 * *"   # 05:23 UTC on the 7th each month
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Keep CA bundle fresh; scraper also has an SSL fallback
          python -m pip install --upgrade certifi

      - name: Crawl + index links (no OCR yet)
        env:
          # Leave false so the scraper will retry without verification on SSLError
          TBC_VERIFY_SSL: "false"
          # Fast mode for initial run (speeds things up). Flip to "false" later.
          SEED_ONLY: "true"
          # Reasonable limits for a quick pass; increase later if needed.
          MAX_PAGES: "200"
          PRINT_EVERY: "10"
        run: python tbc_scraper.py

      - name: Summarize run (empty-CSV safe)
        run: |
          python - <<'PY'
          import os, pandas as pd
          from pathlib import Path
          p = Path("data/derived/sources_index.csv")
          rows = 0
          earliest = latest = 'NA'
          if p.exists() and p.stat().st_size > 0:
            try:
              df = pd.read_csv(p)
              rows = len(df)
              if rows and "report_date" in df.columns:
                earliest = df["report_date"].min()
                latest   = df["report_date"].max()
            except Exception as e:
              print(f"[warn] could not read CSV: {e}")
          summ_path = os.environ.get("GITHUB_STEP_SUMMARY")
          if summ_path:
            Path(summ_path).write_text(
              f"# Step 1 summary\n"
              f"- rows: {rows}\n"
              f"- earliest: {earliest}\n"
              f"- latest: {latest}\n"
            )
          else:
            print(f"rows={rows}, earliest={earliest}, latest={latest}")
          PY

      - name: Show sample rows
        run: |
          python - <<'PY'
          import pandas as pd, pathlib
          p = pathlib.Path("data/derived/sources_index.csv")
          if p.exists() and p.stat().st_size:
              df = pd.read_csv(p)
              print("\nHEAD(10):")
              print(df.head(10).to_string(index=False))
              print("\nTAIL(10):")
              print(df.tail(10).to_string(index=False))
          else:
              print("sources_index.csv is empty")
          PY

      - name: Commit index CSV
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/derived/sources_index.csv README.md || true
          git commit -m "update: Step 1 link index" || echo "no changes"
          git push
